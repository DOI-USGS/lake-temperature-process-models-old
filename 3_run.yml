

target_default: 3_run

include:
  - 2_prep.yml

packages:
  - scipiper
  - dplyr
  - glmtools
  - feather
  - yaml
  - stringr

sources:
  - 2_prep/src/yeti_job_utils.R
  - 3_run/src/postproc_utils.R
  - 3_run/src/local_task_utils.R

targets:
  3_run:
    depends:
      - 2_prep/out/glm_pb0_array.rds


  toha_local_run_plan:
    command: create_toha_local_run_plan(nml_file_group = '2_prep/out/toha_glm3_nml_group.yml')

# a non-time-varying version of the toha runs
  glm3_local_run_plan:
    command: create_glm3_local_run_plan(nml_file_group = '2_prep/out/toha_glm3_nml_group.yml')

  transfer_local_run_plan:
    command: create_transfer_local_run_plan('2_prep/out/glm_transfer_test_array.rds',
      '2_prep/in/PB-MTL_results_single_source_wMetafeatures - pbmtl_glm_transfer_results__Sept8.csv')

# the _rest_ of the PB0 models
  hyperscales_pb0_plan:
    command: create_pb0_local_run_plan(hyperscales_unrun_ids)

  hyperscales_pb0_plan.rds:
    command: saveRDS(hyperscales_pb0_plan, target_name)

  3_pb0_hyperscales_tasks.yml:
    command: create_pb0_tasks_makefile(target_name, hyperscales_pb0_plan,
      final_targets = I('3_run/out/pb0_hyperscales_tasks.ind'))

  pb0_src_trg_plan:
    command: create_pb0_local_run_plan(ran_source_ids, jared_test_ids, target_expansion_ids)

# to get loop tasks to work in Yeti w/o access to the rest of the remakefiles:
  pb0_src_trg_plan.rds:
    command: saveRDS(pb0_src_trg_plan, target_name)

  3_toha_tasks.yml:
    command: create_toha_tasks_makefile(target_name, toha_local_run_plan,
      final_targets = I('3_run/out/toha_tasks.rds.ind'))

  3_glm3_tasks.yml:
    command: create_toha_tasks_makefile(target_name, glm3_local_run_plan,
      final_targets = I('3_run/out/glm3_tasks.rds.ind'))

  3_run/out/glm3_tasks.rds.ind:
    command: scmake(remake_file = '3_glm3_tasks.yml')

  3_run/out/toha_tasks.rds.ind:
    command: scmake(I('toha_tasks.rds.ind_promise'), '3_toha_tasks.yml')

  3_transfer_tasks.yml:
    command: create_transfer_tasks_makefile(target_name, transfer_local_run_plan,
      final_targets = I('3_run/out/transfer_tasks.rds.ind'))

  3_pb0_src_trg_tasks.yml:
    command: create_pb0_tasks_makefile(target_name, pb0_src_trg_plan,
      final_targets = I('3_run/out/pb0_src_trg_tasks.rds.ind'))

  files_to_zip:
    command: remove_wrr(I('3_run/out/temperature_obs.feather'))

  3_run/out/pb0_feather_files.zip:
    command: zip_glm_out(target_name, files_to_zip)

  3_run/out/pb0_meteo_files.zip:
    command: zip_meteo(target_name, files_to_zip, nml_list)

  3_run/out/meteo_to_nhdhr.feather:
    command: mapping_nldas_nhdhr(target_name, files_to_zip, nml_list)

  3_run/out/RMSE_transfer_TEST_glm.csv:
    command: summarize_transfer_test(target_name,
      tasks_ind = '3_run/out/transfer_tasks.rds.ind',
      transfer_metamodel_file = '2_prep/in/GLM_metamodel_predicted_sources_glm_transfer_pball_test_lakes.csv')

  3_run/out/RMSE_transfer_train_extended_glm.csv:
    command: summarize_transfer_glm(target_name,
      dirname = I("3_run/sync"), pattern = I('^transfer_nhdhr_.*_rmse.csv$'),
      n_runs = I(144),
      dummy = I('2020-09-05'))

  3_run/out/RMSE_transfer_test_extended_glm.csv:
    command: summarize_transfer_glm(target_name,
      dirname = I("3_run/sync"), pattern = I('^transfer_test_nhdhr_.*_rmse.csv$'),
      n_runs = I(145),
      dummy = I('2020-09-05'))

  3_run/out/temperature_obs.feather:
    command: subset_temperature(target_name, files_to_zip, '../lake-temperature-model-prep/7b_temp_merge/out/merged_temp_data_daily.feather')

  3_run/out/lake_metadata.feather:
    command: extract_metadata(target_name, files_to_zip, nml_list, "../lake-temperature-model-prep/7_config_merge/out/canonical_lakes_area.rds")


