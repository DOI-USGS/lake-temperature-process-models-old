target_default: 1_create_nmls

packages:
  - scipiper
  - dplyr
  - lakeattributes
  - glmtools
  - mda.lakes
  - sf
  - yaml

file_extensions:
  - feather
  - ind

sources:
  - 1_get_lake_attr/src/lake_attr_utils.R
  - 1_get_lake_attr/src/feature_to_cell_coords.R
  - 1_get_lake_attr/src/grid_utils.R
  - 1_get_lake_attr/src/create_nml_tasks.R
  - 1_get_lake_attr/src/create_nml_tasks_makefile.R
  - lib/src/utils.R

targets:

  # read and subset the project/user settings
  settings:
    command: yaml.load_file('lib/cfg/settings.yml')
  drivers_yeti_path:
    command: settings[[I(c('drivers_yeti_path'))]]
  drivers_time:
    command: settings[[I(c('drivers_time'))]]


  1_get_lake_attr/in/feature_crosswalk.rds: # lake list from pipeline #1, lake-temperature-model-prep
    command: gd_get('1_get_lake_attr/in/feature_crosswalk.rds.ind')

  1_get_lake_attr/in/lakes_sf.rds: # lake sf object from pipeline #1, lake-temperature-model-prep
    command: gd_get('1_get_lake_attr/in/lakes_sf.rds.ind')

  lake_list: # list of nhd_ids for which to create nml task table
    command: lake_list(crosswalk_file = '1_get_lake_attr/in/feature_crosswalk.rds')

  feature_centroids:
    command: sf_file_centroids("1_get_lake_attr/in/lakes_sf.rds")

  NLDAS_grid: # info from OPeNDAP: https://hydro1.gesdisc.eosdis.nasa.gov/dods/NLDAS_FORA0125_H.002
    command: create_ldas_grid(x0 = I(-124.9375), y0 = I(25.0625), x_num = I(464), y_num = I(224), cell_res = I(0.125)) # have to change this if it is changed in pipeline #1

  1_get_lake_attr/out/feature_nldas_coords.rds.ind: # returns x,y coords of grid cell that cooresponds to each feature
    command: feature_to_cell_coords(target_name, NLDAS_grid, feature_centroids)

  1_get_lake_attr/out/feature_nldas_coords.rds:
    command: gd_get('1_get_lake_attr/out/feature_nldas_coords.rds.ind')

  nml_tasks:
    command: create_nml_tasks(lake_list, drivers_yeti_path, '1_get_lake_attr/out/feature_nldas_coords.rds')

  1_nml_tasks_makefile.yml:
    command: create_nml_tasks_makefile(
      makefile = target_name,
      task_plan = nml_tasks,
      remake_file = I('1_get_lake_attr.yml'))

  1_create_nmls:
    command: scmake(remake_file = I('1_nml_tasks_makefile.yml'))
    depends:
      - 1_nml_tasks_makefile.yml

